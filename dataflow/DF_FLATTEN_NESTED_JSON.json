{
	"name": "DF_FLATTEN_NESTED_JSON",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_SOURCE_SAMPLE_NESTED_JSON",
						"type": "DatasetReference"
					},
					"name": "Samplenested"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_SINK_SAMPLE_NESTED_JSON",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          coffee as (region as (id as integer, name as string)[], country as (id as integer, company as string)),",
				"          brewing as (region as (id as integer, name as string)[], country as (id as integer, company as string))",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> Samplenested",
				"Samplenested foldDown(unroll(brewing.region),",
				"     mapColumn(",
				"          Region_id = brewing.region.id,",
				"          region_name = brewing.region.name",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Sample_nested_json.json'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}